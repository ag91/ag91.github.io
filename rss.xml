<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>Where parallels cross</title>
    <link>http://ag91.github.io</link>
    <description>Interesting bits of life</description>
    <pubDate>Tue, 15 Nov 2022 17:22:26 GMT</pubDate>
    <lastBuildDate>Tue, 15 Nov 2022 17:22:26 GMT</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>Catch you JS console.log you forgot to remove with Emacs and Magit</title>
      <link>http://ag91.github.io/blog/2022/11/15/catch-you-js-consolelog-you-forgot-to-remove-with-emacs-and-magit</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Catch you JS console.log you forgot to remove with Emacs and Magit</h1>
<p>
This is to share a little hack I developed for myself. There have been
a few review comments about JS files trying to reach the main/master
branch with console.log in them. Although linter tools like Eslint can
catch this things, I thought I would make sure I get an extra warning
if I were to stage a change with it.
</p>

<p>
So I came up with this little function:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(defun my/find-console-log-in-js-staged-files ()
  "Warn if there are console.log in staged files."
  (when (s-contains-p "\.js" (s-join " " (magit-staged-files))) ; only if there is a staged JS
    (--&gt; (shell-command-to-string "git diff --cached") ; TODO this could cause false positives because it takes all the staged files, even non JS
         s-lines
         (--keep (when (and (s-starts-with-p "+" it) (s-contains-p "console\." it))
                   (substring it 1 (length it)))
                 it)
         (--each it
           (warn (button-buttonize (format "You have a console.* in commit: %s" it) `(lambda (x)
                                                                                       (let ((default-directory ,default-directory))
                                                                                         (magit-diff-staged))
                                                                                       (goto-char (point-min))
                                                                                       (search-forward ,it nil t))))))))

(add-hook 'magit-post-stage-hook 'my/find-console-log-in-js-staged-files)
</pre>
</div>

<p>
It basically checks for console.* ONLY in the hunks I have added in my staged changes.
</p>

<p>
The thing I enjoy is that it warns me AND creates Emacs buttons in
the warning message allowing me to jump to the Magit diff buffer (and
so making it easy solving the issue).
</p>

<p>
The next step would be to automatically remove them, but hey: it was
fun to learn about <code>button-buttonize</code> to make clickable text :)
</p>

<p>
Happy linting!
</p>

</div>
</div>]]></description>
      <pubDate>2022-11-15</pubDate>
      <guid>http://ag91.github.io/blog/2022/11/15/catch-you-js-consolelog-you-forgot-to-remove-with-emacs-and-magit</guid>
    </item>
    <item>
      <title>Merge plists in Elisp</title>
      <link>http://ag91.github.io/blog/2022/10/30/merge-plists-in-elisp</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-10-30</pubDate>
      <guid>http://ag91.github.io/blog/2022/10/30/merge-plists-in-elisp</guid>
    </item>
    <item>
      <title>Find Org Roam notes via their relations</title>
      <link>http://ag91.github.io/blog/2021/03/12/find-org-roam-notes-via-their-relations</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-10-30</pubDate>
      <guid>http://ag91.github.io/blog/2021/03/12/find-org-roam-notes-via-their-relations</guid>
    </item>
    <item>
      <title>Self reflection: a favour I own myself (with a bit of org-ql to make it easier!)</title>
      <link>http://ag91.github.io/blog/2022/10/09/self-reflection-a-favour-i-own-myself-with-a-bit-of-org-ql-to-make-it-easier</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-10-09</pubDate>
      <guid>http://ag91.github.io/blog/2022/10/09/self-reflection-a-favour-i-own-myself-with-a-bit-of-org-ql-to-make-it-easier</guid>
    </item>
    <item>
      <title>A way to fix Helm handling of symlink (/tmp dir) in Mac OS</title>
      <link>http://ag91.github.io/blog/2022/09/13/a-way-to-fix-helm-handling-of-symlink-tmp-dir-in-mac-os</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-09-15</pubDate>
      <guid>http://ag91.github.io/blog/2022/09/13/a-way-to-fix-helm-handling-of-symlink-tmp-dir-in-mac-os</guid>
    </item>
    <item>
      <title>Hacking Projectile to search in all my projects</title>
      <link>http://ag91.github.io/blog/2022/09/13/hacking-projectile-to-search-in-all-my-projects</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-09-15</pubDate>
      <guid>http://ag91.github.io/blog/2022/09/13/hacking-projectile-to-search-in-all-my-projects</guid>
    </item>
    <item>
      <title>Too many org ids! How to tell no to Org mode for certain files</title>
      <link>http://ag91.github.io/blog/2022/09/06/too-many-org-ids-how-to-tell-no-to-org-mode-for-certain-files</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-09-06</pubDate>
      <guid>http://ag91.github.io/blog/2022/09/06/too-many-org-ids-how-to-tell-no-to-org-mode-for-certain-files</guid>
    </item>
    <item>
      <title>Caching Yankpad snippets for a quicker note capturing</title>
      <link>http://ag91.github.io/blog/2022/08/21/caching-yankpad-snippets-for-a-quicker-note-capturing</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-08-21</pubDate>
      <guid>http://ag91.github.io/blog/2022/08/21/caching-yankpad-snippets-for-a-quicker-note-capturing</guid>
    </item>
    <item>
      <title>A YASnippet to make it easy debugging clojure code with atoms</title>
      <link>http://ag91.github.io/blog/2022/07/28/a-yasnippet-to-make-it-easy-debugging-clojure-code-with-atoms</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-07-29</pubDate>
      <guid>http://ag91.github.io/blog/2022/07/28/a-yasnippet-to-make-it-easy-debugging-clojure-code-with-atoms</guid>
    </item>
    <item>
      <title>Delete filename or list of filenames in region with one Emacs command</title>
      <link>http://ag91.github.io/blog/2022/07/23/delete-filename-or-list-of-filenames-in-region-with-one-emacs-command</link>
      <description><![CDATA[]]></description>
      <pubDate>2022-07-23</pubDate>
      <guid>http://ag91.github.io/blog/2022/07/23/delete-filename-or-list-of-filenames-in-region-with-one-emacs-command</guid>
    </item>
  </channel>
</rss>