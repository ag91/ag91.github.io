<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>Where parallels cross</title>
    <link>http://ag91.github.io</link>
    <description>Interesting bits of life</description>
    <pubDate>Mon, 19 Feb 2024 23:43:24 GMT</pubDate>
    <lastBuildDate>Mon, 19 Feb 2024 23:43:24 GMT</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>A quick-fix for golden-ratio and lsp-mode</title>
      <link>http://ag91.github.io/blog/2024/02/19/a-quick-fix-for-golden-ratio-and-lsp-mode</link>
      <description><![CDATA[<div>
<div class="post">
<h1>A quick-fix for golden-ratio and lsp-mode</h1>
<p>
I have been back into Scala development lately and I have been
enjoying using <a href="https://github.com/emacs-lsp/lsp-metals">lsp-metals.el</a>.
</p>

<p>
Coding is a lot about trial and error and my compiler errors are
inflating: they became long enough to make my windows jumpy (as you
can see in the video below)!
</p>

<p>
<a href="/assets/blog/2024/02/19/a-quick-fix-for-golden-ratio-and-lsp-mode/goldenratioslp.mp4">/assets/blog/2024/02/19/a-quick-fix-for-golden-ratio-and-lsp-mode/goldenratioslp.mp4</a>
</p>

<p>
I use <a href="https://github.com/roman/golden-ratio.el">golden-ratio</a> to resize my windows automatically in a way
pleasant to the eye. Unluckily this mode seems to have issues with the
way lsp-mode logs errors.
</p>

<p>
I couldn't dig into this as much as I wanted (very short on time these
days! Actually a year and a half so far of a really demanding joy).
But! I hacked my config enough to make it work:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(use-package golden-ratio
  :diminish golden-ratio-mode
  :defer 1
  :config
  (golden-ratio-mode 1)
  ;; this fixes issue with lsp-mode minibuffer logs (which made my windows jump like crazy)
  (remove-hook 'window-configuration-change-hook 'golden-ratio)
  (add-to-list 'golden-ratio-extra-commands 'avy-goto-char-timer))
</pre>
</div>

<p>
The idea is that the setting of <code>window-configuration-change-hook</code> is
covering what lsp-mode does when it refreshes the minibuffer, so we
disable that hook. That has side effects (for example I use
<code>avy-goto-char-timer</code> a lot and without that hook the window is not
resized). As you can see above, <code>golden-ratio</code> is configurable, so I
added the command explicitly.
</p>

<p>
Hope that helps somebody!
</p>

<p>
Happy error-handling,
</p>

<p>
Andrea
</p>

</div>
</div>]]></description>
      <pubDate>2024-02-19</pubDate>
      <guid>http://ag91.github.io/blog/2024/02/19/a-quick-fix-for-golden-ratio-and-lsp-mode</guid>
    </item>
    <item>
      <title>Make Emacs help in creating an example of Scala classes</title>
      <link>http://ag91.github.io/blog/2023/12/11/make-emacs-help-in-creating-an-example-of-scala-classes</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-12-11</pubDate>
      <guid>http://ag91.github.io/blog/2023/12/11/make-emacs-help-in-creating-an-example-of-scala-classes</guid>
    </item>
    <item>
      <title>An easier way to try Cljs libraries with shadow-cljs ob-clojure and cider</title>
      <link>http://ag91.github.io/blog/2023/08/28/an-easier-way-to-try-cljs-libraries-with-shadow-cljs-ob-clojure-and-cider</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-08-29</pubDate>
      <guid>http://ag91.github.io/blog/2023/08/28/an-easier-way-to-try-cljs-libraries-with-shadow-cljs-ob-clojure-and-cider</guid>
    </item>
    <item>
      <title>An easier way to try out Clojure libraries with ob-clojure and cider</title>
      <link>http://ag91.github.io/blog/2023/08/03/an-easier-way-to-try-out-clojure-libraries-with-ob-clojure-and-cider</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-08-03</pubDate>
      <guid>http://ag91.github.io/blog/2023/08/03/an-easier-way-to-try-out-clojure-libraries-with-ob-clojure-and-cider</guid>
    </item>
    <item>
      <title>scala-cli-repl: a Scala REPL based on scala-cli</title>
      <link>http://ag91.github.io/blog/2023/07/22/scala-cli-repl-a-scala-repl-based-on-scala-cli</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-07-22</pubDate>
      <guid>http://ag91.github.io/blog/2023/07/22/scala-cli-repl-a-scala-repl-based-on-scala-cli</guid>
    </item>
    <item>
      <title>A little exploration of Go from a Clojure perspective</title>
      <link>http://ag91.github.io/blog/2023/06/08/a-little-exploration-of-go-from-a-clojure-perspective</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-06-08</pubDate>
      <guid>http://ag91.github.io/blog/2023/06/08/a-little-exploration-of-go-from-a-clojure-perspective</guid>
    </item>
    <item>
      <title>ob-gore: literate Go run via the Gore REPL</title>
      <link>http://ag91.github.io/blog/2023/06/06/ob-gore-literate-go-run-via-the-gore-repl</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-06-06</pubDate>
      <guid>http://ag91.github.io/blog/2023/06/06/ob-gore-literate-go-run-via-the-gore-repl</guid>
    </item>
    <item>
      <title>FS2 vs ZIO streams with Ammonite: a syntax comparison</title>
      <link>http://ag91.github.io/blog/2023/06/02/fs2-vs-zio-streams-with-ammonite-a-syntax-comparison</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-06-03</pubDate>
      <guid>http://ag91.github.io/blog/2023/06/02/fs2-vs-zio-streams-with-ammonite-a-syntax-comparison</guid>
    </item>
    <item>
      <title>org-blk-uri a little module to insert a file or url as an Org Mode src block</title>
      <link>http://ag91.github.io/blog/2023/05/25/org-blk-uri-a-little-module-to-insert-a-file-or-url-as-an-org-mode-src-block</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-05-25</pubDate>
      <guid>http://ag91.github.io/blog/2023/05/25/org-blk-uri-a-little-module-to-insert-a-file-or-url-as-an-org-mode-src-block</guid>
    </item>
    <item>
      <title>Moldable Emacs: what is the public API of this Elisp buffer?</title>
      <link>http://ag91.github.io/blog/2023/03/24/moldable-emacs-what-is-the-public-api-of-this-elisp-buffer</link>
      <description><![CDATA[]]></description>
      <pubDate>2023-03-24</pubDate>
      <guid>http://ag91.github.io/blog/2023/03/24/moldable-emacs-what-is-the-public-api-of-this-elisp-buffer</guid>
    </item>
  </channel>
</rss>