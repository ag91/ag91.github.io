#+TITLE:       Emacs as your code-compass: a gentle trigger for maintenance
#+AUTHOR:      Andrea
#+EMAIL:       andrea-dev@hotmail.com
#+DATE:        2021-03-26 Fri
#+URI:         /blog/%y/%m/%d/emacs-as-your-code-compass-a-gentle-trigger-for-maintenance
#+KEYWORDS:    emacs, code-compass
#+TAGS:        emacs, code-compass
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: An icon that warns you about always growing files
* Too long; didn't read
:PROPERTIES:
:ID:       6aafebec-234c-4435-888b-59b3ba122cb6
:END:

Do you wonder if it is time to give your code some extra care? I bet you
need an icon and [[https://github.com/ag91/code-compass][code-compass]] provides that by default now!

* The problem
:PROPERTIES:
:ID:       ccd34204-33ad-4b62-bb6e-23497d3c81e0
:END:

We like adding features. It brings new value to your users and nice
challenges ahead! At the same time, we know that too much enthusiasm
will little by little bring in some structural decay. When that
happens you may need a plan because things may have gone already a bit
out of hand. With my code-compass work I want to challenge that. I
would like my computer to tell me: "Hey, you worked a lot on this
code, what about a bit of care?". Until I manage to make it interact
with me, how about some sort of visual queue that points out the state
of the code. I can get that via Git, but I need something immediate.

* It is a problem indeed
:PROPERTIES:
:ID:       3337589b-fb56-4313-b090-03982f3d417e
:END:

Our society comes with a structural issue: [[https://www.britannica.com/science/tragedy-of-the-commons][the tragedy of the commons]].
This happens when we think: "Okay, I know this is not right, but for a
one-off should be okay". Then we commit our change. And other people
do the same, making the code unreadable. This happens with code, with
family issues, with the dirt on the road, with environmental issues. A
way to fix this is to educate everybody to always leave things
slightly better of how they found them, which [[https://www.oreilly.com/library/view/97-things-every/9780596809515/ch08.html][Robert C. Martin calls
the Boyscout Rule]]. That is the ideal. My take is that we can also make
our tools help us with that. Our Emacs should warn us that things are
going downhill. Can it tell us early enough so that we can maintain
things while having fun?

* And there is a solution
:PROPERTIES:
:ID:       791634df-4494-4e1b-9eaa-d2f7e3f7e9b3
:END:

The secret is in the history of code again. We have seen that [[https://ag91.github.io/blog/2020/12/18/emacs-as-your-code-compass-finding-code-hotspots][many
changes (by many people)]] indicate errors and that [[https://ag91.github.io/blog/2021/02/06/-emacs-as-your-code-compass-how-stable-is-my-code][old code is stable]].
So I thought how could I be aware of this while coding. It is true
that code-compass makes it easy to plot this out. Still I would prefer
less latency. Ideally when I open a file and in a way that does not
distract me from the task at hand. This reminded me of the modeline.
After few rounds of trial and errors, I made an icon that shows the
trend of additions for the buffer.

The icon looks like the picture below.

#+BEGIN_SRC emacs-lisp :results file :exports results :file "up.jpg"
  (base64-decode-string
      "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcU
FhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAsARoDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6Yq+U
BdW5yucVQrRoAKKKKACiiigAooooAKKKKACmlAXVucrnFOooAKKKKACiiigAooooAKKKKACiiigA
ooooAKKKKACiiigAooooAKKKKACiiigAooooAzq0CwDBSeT0rx4+MdWDBTcRBjyB5a5Nb+n+KdSm
tYpZWiaTn5tmO/tXj5fndDMKjpUotNK+tvJdG+56WMyutg4KpUate2n/AAx6HRXDf8JPqHrD/wB8
Uf8ACT6h6w/98V7B5p3NFcN/wk+oesP/AHxR/wAJPqHrD/3xQB3NFcN/wk+oesP/AHxR/wAJPqHr
D/3xQB3NFcN/wk+oesP/AHxR/wAJPqHrD/3xQB3NFcN/wk+oesP/AHxUVz4hvriCSGRlCONpMZZG
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
PXLAZNX6AP/Z")
#+END_SRC

#+RESULTS:
[[file:up.jpg]]

The idea is that an arrow pointing up tells that a lot of code was
added last three months. The inclination of the arrow changes to tell
that there were less additions. If it points down it means that there
were more deletions. That is good because less code means also less
maintenance.

Behind the scenes I count all the lines added and deleted according to
the Git history for the specific file. Then I compare these numbers:
if there are no deletions or additions in the last three months the
arrow points up and down respectively. Otherwise the arrow points
upwards if there are more additions, and downwards otherwise. All this
happens asynchronously because reading the git history can take a
while, so there may be a little delay before the icon appears.

You can customize period (the three months) and faces with the
variable =c/icon-trends=. You can also disable the icon setting the
variable =c/display-icon= to =nil=.

This little icon on the left side of my modeline gives me some
insights about the code. If I see an arrow pointing up, I know that I
need to prune my code. And if it is bent, I keep just an eye open for
maintenance.


* Conclusion
:PROPERTIES:
:ID:       f6fde5fd-80eb-41eb-b951-cfe857491c9d
:END:

Check out the latest version of code-compass and you will have your
icon. Let me know if it helps you as well!

Happy coding!

